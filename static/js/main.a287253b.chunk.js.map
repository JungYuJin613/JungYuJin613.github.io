{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Modal","props","className","글제목","누른제목","App","useState","글제목변경","따봉","따봉변경","modal","modal변경","누른제목변경","입력값","입력값변경","어레이","i","push","반복된UI","map","a","글","onClick","onChange","e","target","value","arrayCopy","unshift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAAe,I,MCkGb,SAASA,EAAMC,GACb,OACE,sBAAKC,UAAU,QAAf,UACE,6BAAMD,EAAME,mBAAIF,EAAMG,4BACtB,6CACA,4DAKOC,MAvGf,WAAgB,IAAD,EACOC,mBAAS,CAAC,yCAAY,yCAAa,oCAD1C,mBACRH,EADQ,KACFI,EADE,OAEID,mBAAS,GAFb,mBAERE,EAFQ,KAEJC,EAFI,OAGSH,oBAAS,GAHlB,mBAGRI,EAHQ,KAGFC,EAHE,OAIOL,mBAAS,GAJhB,mBAIRF,EAJQ,KAIHQ,EAJG,OAMSN,mBAAS,IANlB,mBAMPO,EANO,KAMDC,EANC,KA8Bb,OAtBA,WAEE,IADA,IAAIC,EAAM,GACDC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAAIE,KAAK,gDAKbC,GAEU,CAAC,EAAE,EAAE,GACAC,KAAI,SAASC,GAC1B,OAAW,EAAJA,KAWP,sBAAKlB,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SACE,sDAsBAC,EAAIgB,KAAI,SAASE,EAAGL,GAClB,OACE,sBAAKd,UAAU,OAAf,UACE,qBAAIoB,QAAU,WAAMV,EAAOI,IAA3B,UAAoCK,EAApC,IAAwC,sBAAMC,QAAU,WAAMb,EAAKD,EAAG,IAA9B,0BAAxC,IAAuFA,EAAvF,OACA,8DACA,yBAHyBQ,MAajC,sBAAKd,UAAU,UAAf,UACE,uBAAOqB,SAAW,SAACC,GAAMV,EAAMU,EAAEC,OAAOC,UACxC,wBAAQJ,QAAU,WACf,IAAIK,EAAS,YAAQxB,GACrBwB,EAAUC,QAAQf,GAClBN,EAAOoB,IAHV,6BAQF,wBAAQL,QAAU,WAAMX,GAASD,IAAjC,uCAGY,IAAVA,EACE,cAACV,EAAD,CAAOG,qBAAKA,EAAKC,2BAAMA,IACvB,SC9EKyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a287253b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/* eslint-disable */\nimport React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  let [글제목 , 글제목변경] = useState(['남자 코트 추천' ,'강남 우동 맛집' , '파이썬 독학']);\n  let [따봉, 따봉변경] = useState(0);\n  let [modal,modal변경] = useState(false);\n  let [누른제목,누른제목변경] = useState(0);\n\n  let [ 입력값 , 입력값변경 ] = useState('');\n\n  function 반복된UI(){\n    var 어레이 = [];\n    for (var i = 0; i < 3; i++) {\n      어레이.push(<div>안녕</div>);\n    }\n    return 어레이\n  }\n\n  반복된UI();\n\n  var 어레이 = [2,3,4];\n  var 뉴어레이 = 어레이.map(function(a){\n    return a * 2\n  });\n\n  let posts = '강남 고기 맛집';\n\n  function 제목바꾸기(){\n    var newArray = [...글제목];\n    newArray = ['여자 코트 추천','강남 우동 맛집','파이썬 독학'];\n    글제목변경( newArray );\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"black-nav\">\n        <div>개발 Blog</div>\n      </div>\n      {/* <button onClick={ 제목바꾸기 }>버튼</button>\n      <div className=\"list\">\n        <h3>{ 글제목[0] } <span onClick={ ()=>{ 따봉변경(따봉+1)} }>👍</span> {따봉}</h3>\n        <p>2월 17일 발행</p>\n        <hr/>\n      </div>\n      <div className=\"list\">\n        <h3>{ 글제목[1] }</h3>\n        <p>2월 18일 발행</p>\n        <hr/>\n      </div>\n      <div className=\"list\">\n        <h3>{ 글제목[2] }</h3>\n        <p>2월 19일 발행</p>\n        <hr/>\n      </div> */}\n      \n      {/* { 반복된UI() } */}\n\n      { \n        글제목.map(function(글, i){\n          return (\n            <div className=\"list\" key={i}>\n              <h3 onClick={ ()=>{ 누른제목변경(i)} } >{ 글 } <span onClick={ ()=>{ 따봉변경(따봉+1)} }>👍</span> {따봉} </h3>\n              <p>2월 17일 발행</p>\n              <hr/>\n            </div>\n          )\n        })\n      }\n\n      {/* <button onClick={ ()=>{ 누른제목변경(0)} }>버튼1</button>\n      <button onClick={ ()=>{ 누른제목변경(1)} }>버튼2</button>\n      <button onClick={ ()=>{ 누른제목변경(2)} }>버튼3</button> */}\n      \n      <div className=\"publish\">\n        <input onChange={ (e)=>{ 입력값변경(e.target.value)} }/>\n        <button onClick={ ()=> {\n           var arrayCopy =  [...글제목];\n           arrayCopy.unshift(입력값);\n           글제목변경( arrayCopy );\n          } } >저장</button>\n      </div>\n\n      {/* <input onChange={ (e)=> { 입력값변경(e.target.value) } } /> */}\n      <button onClick={ ()=>{ modal변경(!modal)} }>열고닫기</button>\n\n      {\n        modal === true \n        ? <Modal 글제목={글제목} 누른제목={누른제목} ></Modal>\n        : null\n      }\n\n\n    </div>\n  );\n}\n\n  function Modal(props){\n    return(\n      <div className=\"modal\">\n        <h2>{ props.글제목[props.누른제목] }</h2>\n        <p>날짜</p>\n        <p>상세내용</p>\n      </div>\n    )\n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}